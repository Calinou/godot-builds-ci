# The GitHub repository is mirrored to GitLab.com, where continuous builds
# are performed and can be downloaded.
#
# https://gitlab.com/Calinou/godot-builds-ci
#
# This build script is licensed under CC0 1.0 Universal:
# https://creativecommons.org/publicdomain/zero/1.0/

stages:
  - build
  - deploy

variables:
  # The build name to use instead of "custom_build"
  # This helps people identify where the build comes from
  BUILD_NAME: calinou
  # The number of CPU threads to use for compiling Godot
  BUILD_THREADS: "1"
  # SCons build flags to use for all platforms
  SCONS_FLAGS: debug_symbols=no progress=no -j$BUILD_THREADS
  # The Godot Git repository clone URL
  GODOT_REPO_URL: https://github.com/godotengine/godot.git

before_script:
  - "$CI_PROJECT_DIR/scripts/gitlab-ci/before_script.sh"
  - cd "godot/"

.artifacts: &artifacts
  paths:
    - artifacts/
  expire_in: 1 week

# Linux editor
# Built on Ubuntu 14.04 so that binaries run on old distributions as well
build:linux_editor:
  stage: build
  image: ubuntu:trusty
  variables:
    DEBIAN_FRONTEND: noninteractive
  script:
    - "$CI_PROJECT_DIR/scripts/gitlab-ci/build/linux_editor.sh"
  artifacts: *artifacts

# Linux export templates (debug)
# Built on Ubuntu 14.04 so that binaries run on old distributions as well
build:linux_templates_debug:
  stage: build
  image: ubuntu:trusty
  variables:
    DEBIAN_FRONTEND: noninteractive
  script:
    - "$CI_PROJECT_DIR/scripts/gitlab-ci/build/linux_templates.sh debug"
  artifacts: *artifacts

# Linux export templates (release)
# Built on Ubuntu 14.04 so that binaries run on old distributions as well
build:linux_templates_release:
  stage: build
  image: ubuntu:trusty
  variables:
    DEBIAN_FRONTEND: noninteractive
  script:
    - "$CI_PROJECT_DIR/scripts/gitlab-ci/build/linux_templates.sh release"
  artifacts: *artifacts

# HTML5/WebAssembly (debug)
build:html5_debug:
  stage: build
  image: fedora:28
  script:
    - '"$CI_PROJECT_DIR/scripts/gitlab-ci/build/html5.sh" debug'
  artifacts: *artifacts

# HTML5/WebAssembly (release)
build:html5_release:
  stage: build
  image: fedora:28
  script:
    - '"$CI_PROJECT_DIR/scripts/gitlab-ci/build/html5.sh" release'
  artifacts: *artifacts

# Android (debug)
build:android_debug:
  stage: build
  image: fedora:28
  script:
    - '"$CI_PROJECT_DIR/scripts/gitlab-ci/build/android.sh" debug'
  artifacts: *artifacts

# Android (release)
build:android_release:
  stage: build
  image: fedora:28
  script:
    - '"$CI_PROJECT_DIR/scripts/gitlab-ci/build/android.sh" release'
  artifacts: *artifacts

# Windows editor (64-bit)
build:windows_editor_64:
  stage: build
  image: fedora:28
  variables:
    # Use only 1 thread for building
    # (required to compile LTO-enabled builds successfully)
    BUILD_THREADS: "1"
  script:
    - '"$CI_PROJECT_DIR/scripts/gitlab-ci/build/windows_editor.sh" 64'
  artifacts: *artifacts

# Windows editor (32-bit)
build:windows_editor_32:
  stage: build
  image: fedora:28
  script:
    - '"$CI_PROJECT_DIR/scripts/gitlab-ci/build/windows_editor.sh" 32'
  artifacts: *artifacts

# Windows export templates (debug, 64-bit)
build:windows_templates_debug_64:
  stage: build
  image: fedora:28
  variables:
    # Use only 1 thread for building
    # (required to compile LTO-enabled builds successfully)
    BUILD_THREADS: "1"
  script:
    - '"$CI_PROJECT_DIR/scripts/gitlab-ci/build/windows_templates.sh" debug 64'
  artifacts: *artifacts

# Windows export templates (debug, 32-bit)
build:windows_templates_debug_32:
  stage: build
  image: fedora:28
  script:
    - '"$CI_PROJECT_DIR/scripts/gitlab-ci/build/windows_templates.sh" debug 32'
  artifacts: *artifacts

# Windows export templates (release, 64-bit)
build:windows_templates_release_64:
  stage: build
  image: fedora:28
  variables:
    # Use only 1 thread for building
    # (required to compile LTO-enabled builds successfully)
    BUILD_THREADS: "1"
  script:
    - '"$CI_PROJECT_DIR/scripts/gitlab-ci/build/windows_templates.sh" release 64'
  artifacts: *artifacts

# Windows export templates (release, 32-bit)
build:windows_templates_release_32:
  stage: build
  image: fedora:28
  script:
    - '"$CI_PROJECT_DIR/scripts/gitlab-ci/build/windows_templates.sh" release 32'
  artifacts: *artifacts

# Deploys all artifacts (currently via SFTP)
deploy:
  stage: deploy
  image: fedora:28
  when: always
  before_script:
    - dnf install -yq advancecomp openssh-clients zip
  script:
    - "$CI_PROJECT_DIR/scripts/gitlab-ci/deploy.sh"
